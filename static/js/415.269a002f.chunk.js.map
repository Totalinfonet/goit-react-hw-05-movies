{"version":3,"file":"static/js/415.269a002f.chunk.js","mappings":"4OAqCA,UAhCa,WACX,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,6GAELC,EAAAA,EAAAA,oBAFK,OAElBC,EAFkB,OAGxBJ,EAAUI,GAHc,gDAKxBC,QAAQC,MAAR,MALwB,yDAAH,qDASzBJ,GACD,GAAE,IAEH,IAAMK,GAAiBC,EAAAA,EAAAA,UAAQ,kBAAMT,CAAN,GAAc,CAACA,IAE9C,OACE,UAACU,EAAD,YACE,4CACA,wBACGF,EAAeG,KAAI,SAAAC,GAAK,OACvB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,SAAkCF,EAAMG,SADjCH,EAAME,GADQ,QAQhC,EAID,IAAMJ,EAAcM,EAAAA,EAAAA,IAAH,+Z,8DCrCXC,EAAU,mCAEVC,EAAmB,kDAEnBC,EAAqB,sCAErBC,EAAwB,4CAEfC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,6GAE2BC,EAAAA,EAAAA,IAAUJ,EAAkB,CACjDK,OAAQ,CACNC,QAASP,KAJjB,cAEUQ,EAFV,yBAOWA,EAASpB,KAAKqB,SAPzB,sCASIpB,QAAQC,MAAR,MACM,IAAIoB,MAAM,iCAVpB,gFAceC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BC,GAA5B,gGAE2BP,EAAAA,EAAAA,IAAA,UAAaH,EAAb,YAAmCU,GAAW,CACnEN,OAAQ,CACNC,QAASP,KAJjB,cAEUQ,EAFV,yBAOWA,EAASpB,MAPpB,sCASIC,QAAQC,MAAR,MACM,IAAIoB,MAAM,4BAVpB,gFAceG,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BC,GAA5B,gGAE2BT,EAAAA,EAAAA,IAAUF,EAAuB,CACtDG,OAAQ,CACNC,QAASP,EACTe,MAAOD,KALf,cAEUN,EAFV,yBAQWA,EAASpB,KAAKqB,SARzB,sCAUIpB,QAAQC,MAAR,MACM,IAAIoB,MAAM,0BAXpB,gFAeeM,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BJ,GAA5B,gGAE2BP,EAAAA,EAAAA,IAAA,UAClBH,GADkB,OACGU,EADH,YAErB,CACEN,OAAQ,CACNC,QAASP,KANnB,cAEUQ,EAFV,yBAUWA,EAASpB,KAAK6B,MAVzB,sCAYI5B,QAAQC,MAAR,MACM,IAAIoB,MAAM,+BAbpB,gFAiBeQ,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BN,GAA/B,gGAE2BP,EAAAA,EAAAA,IAAA,UAClBH,GADkB,OACGU,EADH,YAErB,CACEN,OAAQ,CACNC,QAASP,KANnB,cAEUQ,EAFV,yBAUWA,EAASpB,KAAKqB,SAVzB,sCAYIpB,QAAQC,MAAR,MACM,IAAIoB,MAAM,+BAbpB,gFAiBA,IAAMvB,EAAa,CACjBiB,kBAhFF,WAEeA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EA+EbO,aA/EF,SAc4B,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAkEbE,aAlEF,SAc4B,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAqDbG,aArDF,SAe4B,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAuCbE,gBAvCF,SAiB+B,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,GAyBf,K","sources":["pages/Home.jsx","service/apiService.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { useEffect, useState, useMemo } from 'react';\nimport apiService from '../service/apiService';\nimport styled from '@emotion/styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        const data = await apiService.getTrendingMovies();\n        setMovies(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchTrendingMovies();\n  }, []);\n\n  const memoizedMovies = useMemo(() => movies, [movies]);\n\n  return (\n    <HomeWrapper>\n      <h1>Trending Today</h1>\n      <ul>\n        {memoizedMovies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </HomeWrapper>\n  );\n};\n\nexport default Home;\n\nconst HomeWrapper = styled.div`\n  h1 {\n    font-size: 2rem;\n    font-weight: bold;\n    margin-bottom: 1rem;\n  }\n\n  ul {\n    list-style-type: disclosure-closed;\n    margin-left: 48px;\n    padding: 0;\n\n    li {\n      margin-bottom: 0.5rem;\n    }\n\n    a {\n      color: blue;\n      text-decoration: none;\n\n      &:hover {\n        text-decoration: underline;\n        font-weight: bold;\n      }\n    }\n  }\n`;\n","import axios from 'axios';\n\nconst API_KEY = '68685731643ea27d6deb89fd83fc916a';\n\nconst TRENDING_API_URL = 'https://api.themoviedb.org/3/trending/movie/day';\n\nconst MOVIE_INFO_API_URL = 'https://api.themoviedb.org/3/movie/';\n\nconst SEARCH_MOVIES_API_URL = 'https://api.themoviedb.org/3/search/movie';\n\nasync function getTrendingMovies() {\n  try {\n    const response = await axios.get(TRENDING_API_URL, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    throw new Error('Error getting trending movies');\n  }\n}\n\nasync function getMovieInfo(movieId) {\n  try {\n    const response = await axios.get(`${MOVIE_INFO_API_URL}/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw new Error('Error getting movie info');\n  }\n}\n\nasync function searchMovies(keyword) {\n  try {\n    const response = await axios.get(SEARCH_MOVIES_API_URL, {\n      params: {\n        api_key: API_KEY,\n        query: keyword,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    throw new Error('Error searching movies');\n  }\n}\n\nasync function getMovieCast(movieId) {\n  try {\n    const response = await axios.get(\n      `${MOVIE_INFO_API_URL}${movieId}/credits`,\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n    throw new Error('Error getting movie credits');\n  }\n}\n\nasync function getMovieReviews(movieId) {\n  try {\n    const response = await axios.get(\n      `${MOVIE_INFO_API_URL}${movieId}/reviews`,\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    throw new Error('Error getting movie reviews');\n  }\n}\n\nconst apiService = {\n  getTrendingMovies,\n  getMovieInfo,\n  searchMovies,\n  getMovieCast,\n  getMovieReviews,\n};\n\nexport default apiService;\n"],"names":["useState","movies","setMovies","useEffect","fetchTrendingMovies","apiService","data","console","error","memoizedMovies","useMemo","HomeWrapper","map","movie","to","id","title","styled","API_KEY","TRENDING_API_URL","MOVIE_INFO_API_URL","SEARCH_MOVIES_API_URL","getTrendingMovies","axios","params","api_key","response","results","Error","getMovieInfo","movieId","searchMovies","keyword","query","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}