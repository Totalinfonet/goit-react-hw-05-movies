{"version":3,"file":"static/js/528.7521ffda.chunk.js","mappings":"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","sources":["components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","pages/Movies.jsx","service/apiService.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Input = styled.input`\n  font-size: 1rem;\n  padding: 0.5rem;\n  border: none;\n  border-radius: 0.5rem;\n  outline: none;\n  margin-right: 0.5rem;\n  width: 100%;\n  max-width: 20rem;\n  box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.2);\n  &:focus {\n    box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.5);\n  }\n`;\n\nconst Button = styled.button`\n  font-size: 1rem;\n  padding: 0.5rem 1rem;\n  border: none;\n  border-radius: 0.5rem;\n  outline: none;\n  background-color: #333;\n  color: #fff;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  &:hover {\n    background-color: #555;\n    color: orange;\n  }\n`;\n\nexport { Form, Input, Button };\n","import React, { useState } from 'react';\nimport { Form, Input, Button } from './SearchBar.styled';\n\nconst SearchBar = ({ onSearch }) => {\n  const [keyword, setKeyword] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (keyword === '') {\n      alert('Please enter a search query');\n      return;\n    }\n    onSearch(keyword);\n  };\n\n  const handleKeywordChange = event => {\n    setKeyword(event.target.value);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input type=\"text\" value={keyword} onChange={handleKeywordChange} />\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n};\n\nexport default SearchBar;\n","import React, { useState, useMemo } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchBar from '../components/SearchBar/SearchBar';\nimport apiService from '../../src/service/apiService';\n\nconst Movies = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [submitted, setSubmitted] = useState(false);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleSearch = async keyword => {\n    setSearchTerm(keyword);\n    setSubmitted(true);\n    const results = await apiService.searchMovies(keyword);\n    setSearchResults(results);\n    setSearchParams({ query: keyword });\n  };\n\n  const movies = useMemo(() => {\n    if (searchTerm === '') {\n      return [];\n    }\n    return searchResults;\n  }, [searchTerm, searchResults]);\n\n  const queryParams = new URLSearchParams(location.search);\n  const query = queryParams.get('query') || '';\n\n  if (query !== '' && searchTerm === '') {\n    setSearchTerm(query);\n    setSubmitted(true);\n    apiService.searchMovies(query).then(setSearchResults);\n  }\n  console.log(searchParams);\n\n  return (\n    <div>\n      <SearchBar onSearch={handleSearch} initialValue={query} />\n      {submitted && movies.length === 0 && (\n        <p>No results found for \"{searchTerm}\"</p>\n      )}\n      {movies.length > 0 && (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '68685731643ea27d6deb89fd83fc916a';\n\nconst TRENDING_API_URL = 'https://api.themoviedb.org/3/trending/movie/day';\n\nconst MOVIE_INFO_API_URL = 'https://api.themoviedb.org/3/movie/';\n\nconst SEARCH_MOVIES_API_URL = 'https://api.themoviedb.org/3/search/movie';\n\nasync function getTrendingMovies() {\n  try {\n    const response = await axios.get(TRENDING_API_URL, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    throw new Error('Error getting trending movies');\n  }\n}\n\nasync function getMovieInfo(movieId) {\n  try {\n    const response = await axios.get(`${MOVIE_INFO_API_URL}/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw new Error('Error getting movie info');\n  }\n}\n\nasync function searchMovies(keyword) {\n  try {\n    const response = await axios.get(SEARCH_MOVIES_API_URL, {\n      params: {\n        api_key: API_KEY,\n        query: keyword,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    throw new Error('Error searching movies');\n  }\n}\n\nasync function getMovieCast(movieId) {\n  try {\n    const response = await axios.get(\n      `${MOVIE_INFO_API_URL}${movieId}/credits`,\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n    throw new Error('Error getting movie credits');\n  }\n}\n\nasync function getMovieReviews(movieId) {\n  try {\n    const response = await axios.get(\n      `${MOVIE_INFO_API_URL}${movieId}/reviews`,\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    throw new Error('Error getting movie reviews');\n  }\n}\n\nconst apiService = {\n  getTrendingMovies,\n  getMovieInfo,\n  searchMovies,\n  getMovieCast,\n  getMovieReviews,\n};\n\nexport default apiService;\n"],"names":["Form","styled","Input","Button","onSearch","useState","keyword","setKeyword","onSubmit","event","preventDefault","alert","type","value","onChange","target","searchTerm","setSearchTerm","searchResults","setSearchResults","submitted","setSubmitted","location","useLocation","useSearchParams","searchParams","setSearchParams","handleSearch","apiService","results","query","movies","useMemo","URLSearchParams","search","get","then","console","log","initialValue","length","map","movie","to","id","state","from","title","API_KEY","TRENDING_API_URL","MOVIE_INFO_API_URL","SEARCH_MOVIES_API_URL","getTrendingMovies","axios","params","api_key","response","data","error","Error","getMovieInfo","movieId","searchMovies","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}